
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	
	ФормированиеДвиженийПоОкладу();	
	
	ФормированиеДвиженийПрочиеНачисления();
	
	ФормированиеДвиженийНачислениеПремии();
	
	ФормированиеДвиженийПоНДФЛ();
	
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
	Движения.ВКМ_Удержания.Записать();
	
	
	
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


Процедура ФормированиеДвиженийПоОкладу()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗарплатыСписокСотрудников.Сотрудник,
		|	ВКМ_НачислениеЗарплатыСписокСотрудников.ВидРасчета,
		|	ВКМ_НачислениеЗарплатыСписокСотрудников.ДатаНачала,
		|	ВКМ_НачислениеЗарплатыСписокСотрудников.ДатаОкончания,
		|	ВКМ_НачислениеЗарплатыСписокСотрудников.ГрафикРаботы КАК ГрафикРаботы,
		|	ВКМ_НачислениеЗарплатыСписокСотрудников.НомерСтроки
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.СписокСотрудников КАК ВКМ_НачислениеЗарплатыСписокСотрудников
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыСписокСотрудников.Ссылка = &Ссылка
		|	И ВКМ_НачислениеЗарплатыСписокСотрудников.ВидРасчета = &Оклад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
		|	ВТ_ДанныеДокумента.ДатаНачала КАК ПериодДействияНачало,
		|	ВТ_ДанныеДокумента.ДатаОкончания КАК ПериодДействияКонец,
		|	ВТ_ДанныеДокумента.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТ_ДанныеДокумента.ВидРасчета КАК ВидРасчета,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Показатель,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВТ_ДанныеДокумента.Сотрудник) КАК СотрудникПредставление,
		|	ВТ_ДанныеДокумента.НомерСтроки
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ВТ_ДанныеДокумента.Сотрудник
		|			ИЗ
		|				ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВТ_ДанныеДокумента.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Сообщение = Новый СообщениеПользователю();
		ТекстСообщения = "Заполните сотрудника!";
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
		Если ВыборкаДетальныеЗаписи.Показатель = 0 Тогда
			
			Сообщение = Новый СообщениеПользователю();
			ТекстСообщения = СтрШаблон("Заполните оклад для сотрудника ""%1"".", ВыборкаДетальныеЗаписи.СотрудникПредставление);		
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Сообщить();
		
		КонецЕсли;
		Движение.ПериодРегистрации = Дата;
		
	КонецЦикла;	
		
		
		
	//Расчет оклада
		
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ДнейПериодДействия КАК НормаДней,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ДнейФактическийПериодДействия КАК ФактДней
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
		|	И ВидРасчета = &Оклад) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.ОтработаноДней = Выборка.ФактДней;
		Движение.Сумма = ?(Выборка.НормаДней > 0, Движение.Показатель * Движение.ОтработаноДней / Выборка.НормаДней, 0);
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
		
	
КонецПроцедуры


Процедура ФормированиеДвиженийПрочиеНачисления()
	
	
	Для Каждого ТекСтрока из СписокСотрудников Цикл
		
		Если ТекСтрока.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ТекСтрока.ВидРасчета;
		Движение.Сотрудник = ТекСтрока.Сотрудник;
		Движение.ПериодДействияНачало = ТекСтрока.ДатаНачала;
		Движение.ПериодДействияКонец = ТекСтрока.ДатаОкончания;
		Движение.ГрафикРаботы = ТекСтрока.ГрафикРаботы;
		
		Если Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Движение.ПериодДействияНачало, -12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Движение.ПериодДействияНачало, -1));
			
			
			ДвижениеОтпуск = Движения.ВКМ_ГрафикОтпусков.Добавить();
			ДвижениеОтпуск.Период = Дата;
			ДвижениеОтпуск.ВидДвижения = ВидДвиженияНакопления.Расход;
			ДвижениеОтпуск.Сотрудник = ТекСтрока.Сотрудник;
			ДвижениеОтпуск.ДнейОтпуска = (НачалоДня(ТекСтрока.ДатаОкончания) - НачалоДня(ТекСтрока.ДатаНачала)) / (86400) + 1;

		КонецЕсли;
		

		
	КонецЦикла;
	
	
	
	//Расчет отпуска
	
	Запрос = Новый Запрос;
		
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.СуммаБаза, 0) КАК РезультатБаза,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК ОтработаноДнейБаза,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ДнейФактическийПериодДействия, 0) КАК ДнейФактическийПериодДействия,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВКМ_ОсновныеНачисления.Сотрудник) КАК Сотрудник
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
		|			Регистратор = &Ссылка
		|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
		|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки = ВКМ_ОсновныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.ОтработаноДней = Выборка.ДнейФактическийПериодДействия;
		
		Если  Выборка.ОтработаноДнейБаза > 0 Тогда
			
			Движение.Показатель = Выборка.РезультатБаза / Выборка.ОтработаноДнейБаза;
			Движение.Сумма = Движение.Показатель * Движение.ОтработаноДней;
			
		Иначе 
			
			Сообщение = Новый СообщениеПользователю();
			ТекстСообщения = СтрШаблон("Нельзя начислить отпускные сотруднику %1", Выборка.Сотрудник);
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Сообщить();
			
		КонецЕсли;
	

	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
КонецПроцедуры


Процедура ФормированиеДвиженийНачислениеПремии()
	
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВКМ_НачислениеЗарплатыСписокСотрудников.Сотрудник КАК Сотрудник,
		|	ВКМ_ФизическиеЛица.Категория КАК Категория
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.СписокСотрудников КАК ВКМ_НачислениеЗарплатыСписокСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВКМ_ФизическиеЛица КАК ВКМ_ФизическиеЛица
		|		ПО ВКМ_НачислениеЗарплатыСписокСотрудников.Сотрудник = ВКМ_ФизическиеЛица.Ссылка
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыСписокСотрудников.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.ЧасовКОплатеОборот, 0) КАК ЧасовКОплате,
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплате
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоПериода, &КонецПериода,,
		|			Сотрудник В
		|			(ВЫБРАТЬ
		|				ВТ_ДанныеДокумента.Сотрудник
		|			ИЗ
		|				ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО ВТ_ДанныеДокумента.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
		|ГДЕ
		|	ВТ_ДанныеДокумента.Категория = ЗНАЧЕНИЕ(Перечисление.ВКМ_КатегорияФизическогоЛица.Специалист)";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентЗаВыполненныеРаботы;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Показатель = Выборка.ЧасовКОплате;
		Движение.Сумма = Выборка.СуммаКОплате;
		Движение.ПериодРегистрации = Дата;
		
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
КонецПроцедуры



Процедура ФормированиеДвиженийПоНДФЛ()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВКМ_НачислениеЗарплатыСписокСотрудников.Сотрудник
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.СписокСотрудников КАК ВКМ_НачислениеЗарплатыСписокСотрудников
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыСписокСотрудников.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
	
	КонецЦикла;
	
	
	//Расчет НДФЛ
	
		Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.СуммаБаза КАК СуммаБазаДоп
		|ПОМЕСТИТЬ ВТ_ДопНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, &Разрезы, Регистратор = &Ссылка
		|	И ВидРасчета = &НДФЛ) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки,
		|	ВКМ_Удержания.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВТ_ДопНачисления.СуммаБазаДоп, 0) + ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.СуммаБаза, 0) КАК
		|		Показатель,
		|	ВКМ_НДФЛ.Значение / 100 КАК КоэффициентНДФЛ
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
		|			Регистратор = &Ссылка
		|		И ВидРасчета = &НДФЛ) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопНачисления КАК ВТ_ДопНачисления
		|		ПО ВКМ_Удержания.НомерСтроки = ВТ_ДопНачисления.НомерСтроки,
		|	Константа.ВКМ_НДФЛ КАК ВКМ_НДФЛ
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка
		|	И ВКМ_Удержания.ВидРасчета = &НДФЛ";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");
	Запрос.УстановитьПараметр("Разрезы", Разрезы);	
	
	Запрос.УстановитьПараметр("НДФЛ", ПланыВидовРасчета.ВКМ_Удержания.НДФЛ);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СуммаНачислено = Выборка.Показатель;
		НачисленоНДФЛ = СуммаНачислено * Выборка.КоэффициентНДФЛ;
		СуммаКВыплате = СуммаНачислено - НачисленоНДФЛ;
		
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Движение.Показатель = СуммаНачислено;
		Движение.Сумма = НачисленоНДФЛ;
		
		//Движения по РН ВКМ_ВзаиморасчетыССотрудниками 
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = СуммаКВыплате;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		
	КонецЦикла;
	
	
	Движения.ВКМ_Удержания.Записать();
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
	
	
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
