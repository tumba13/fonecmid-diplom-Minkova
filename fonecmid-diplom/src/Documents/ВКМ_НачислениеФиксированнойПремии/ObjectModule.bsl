
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	
	Движения.ВКМ_Удержания.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	
	КоэффициентНДФЛ = Константы.ВКМ_НДФЛ.Получить() / 100;
	
	Для Каждого ТекСтрока из СписокСотрудников Цикл
	
		ДвижениеДопНачисления = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		ДвижениеДопНачисления.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.Премия;
		ДвижениеДопНачисления.ПериодРегистрации = Дата;
		ДвижениеДопНачисления.Сотрудник = ТекСтрока.Сотрудник;
		ДвижениеДопНачисления.Сумма = ТекСтрока.СуммаПремии;
				
		ДвижениеУдержания = Движения.ВКМ_Удержания.Добавить();
		ДвижениеУдержания.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		ДвижениеУдержания.ПериодРегистрации = Дата;
		ДвижениеУдержания.Сотрудник = ТекСтрока.Сотрудник;
		ДвижениеУдержания.БазовыйПериодНачало = НачалоМесяца(Дата);
		ДвижениеУдержания.БазовыйПериодКонец = КонецМесяца(Дата);
		ДвижениеУдержания.Показатель = ТекСтрока.СуммаПремии;
		СуммаНДФЛ = ДвижениеУдержания.Показатель * КоэффициентНДФЛ;
		ДвижениеУдержания.Сумма = СуммаНДФЛ;
		
		ДвижениеВзаиморасчеты = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		ДвижениеВзаиморасчеты.ВидДвижения = ВидДвиженияНакопления.Приход;
		ДвижениеВзаиморасчеты.Период = Дата;
		ДвижениеВзаиморасчеты.Сотрудник = ТекСтрока.Сотрудник;
		ДвижениеВзаиморасчеты.Сумма = ТекСтрока.СуммаПремии - СуммаНДФЛ;
	
	
	КонецЦикла;
	
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
